# See https://pre-commit.com for more information

default_install_hook_types: [pre-commit, commit-msg]
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: "4.2.0"

repos:
  # TODO: Add sub-pre-commit configuration when first tool is added
  # Example:
  # - repo: https://github.com/ddanier/sub-pre-commit.git
  #   rev: v4.2.0
  #   hooks:
  #     - id: sub-pre-commit
  #       alias: tool-name
  #       name: "pre-commit for tool-name/"
  #       args: ["-p", "tool-name"]
  #       files: "^tool-name/.*"

  # General fixes
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: mixed-line-ending
        args: [--fix=lf]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: [--format, parsable, -c, .yamllint.yml]

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: ".*CLAUDE.md$"

  # Shell scripts
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Shell script formatting
  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.11.0-1
    hooks:
      - id: shfmt
        name: Format shell scripts with shfmt
        args: [-i, "2", -w] # 2 space indent, write in place

  # Commit message validation
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        name: Check commit message format
        stages: [commit-msg, pre-push]
      - id: commitizen-branch
        name: Check branch name format
        stages: [manual]

# Configuration for specific hooks
# Skip all: git commit --no-verify
# Skip specific: SKIP=hook-id git commit

# CI configuration
ci:
  autofix_prs: true # Automatically fix PRs
  autofix_commit_msg: "chore: auto-fix from pre-commit hooks"
  autoupdate_branch: "" # Update PRs on default branch
  autoupdate_commit_msg: "chore: pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: [] # Skip local-only hooks in CI
  submodules: false
